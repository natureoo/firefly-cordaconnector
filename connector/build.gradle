buildscript {
//    ext.kotlin_version = '1.9.20-Beta'
    ext {
        corda_release_version = "4.4"
    }
    repositories {
        mavenLocal()
        mavenCentral()
        google()
    }

    dependencies {
        classpath "commons-io:commons-io:2+"
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


plugins {
    id 'org.springframework.boot' version '2.1.15.RELEASE'
}


java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}


repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    google()
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
//    maven { url 'https://software.r3.com/artifactory/corda' }
}

apply plugin:'java'
//apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'


// See https://docs.spring.io/dependency-management-plugin/docs/current/reference/html
dependencyManagement {
    dependencies {
        dependency "org.apache.logging.log4j:log4j-slf4j-impl:2.11.2"
    }
}

// Corda serialization requires function parameter names to be included in the class file
compileJava {
    options.compilerArgs << '-parameters'
}

//configurations {
//    runtime.exclude group: "co.paralleluniverse", module: "quasar-core"
//}

configurations.all {
    exclude group: 'co.paralleluniverse', module: 'quasar-core'
}

dependencies {
    // CorDapp dependencies
    implementation project(":cordapp:firefly-contracts")
    implementation project(":cordapp:firefly-flows")

    testCompile "junit:junit:4.12"

    // Corda dependencies.
    implementation ("net.corda:corda-core:$corda_release_version")
    implementation ("net.corda:corda-rpc:$corda_release_version")
    implementation "net.corda:corda-jackson:$corda_release_version"
    implementation 'javax.json:javax.json-api:1.0'

    implementation("org.springframework.boot:spring-boot-starter-websocket:2.1.15.RELEASE") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    implementation ("org.springframework.boot:spring-boot-starter-data-jpa:2.1.15.RELEASE") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    implementation "org.springframework.boot:spring-boot-starter-log4j2:2.1.15.RELEASE"
    implementation "org.springdoc:springdoc-openapi-ui:1.5.2"
    implementation "org.apache.logging.log4j:log4j-web:2.11.2"
    implementation "org.javassist:javassist:3.23.1-GA"
    runtime "com.h2database:h2:1.4.200"

    implementation(files("/Users/chenjian/Documents/chenj/work/workplace/study/blockchain/kaleido/firefly-cordaconnect/lib/quasar.jar"))
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'

    implementation 'org.java-websocket:Java-WebSocket:1.5.4'


}

mainClassName = 'io.kaleido.cordaconnector.Server'


springBoot {
    mainClassName = 'io.kaleido.cordaconnector.Server'
}

task deployFireflyServer(type: JavaExec, dependsOn: jar) {
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
}
//compileKotlin {
//    kotlinOptions {
//        jvmTarget = "11"
//    }
//}
//compileTestKotlin {
//    kotlinOptions {
//        jvmTarget = "11"
//    }
//}
